// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QLTT.Data;

#nullable disable

namespace QLTT.Migrations
{
    [DbContext(typeof(QLTTDbContext))]
    [Migration("20250430114620_CreateDatabase")]
    partial class CreateDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QLTT.Data.CongTy", b =>
                {
                    b.Property<int>("CongTyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CongTyId"));

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayThanhLap")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuocGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenCongTy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CongTyId");

                    b.ToTable("CongTy");
                });

            modelBuilder.Entity("QLTT.Data.DanhTinh", b =>
                {
                    b.Property<int>("DanhTinhId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DanhTinhId"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoTenThat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdolId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DanhTinhId");

                    b.HasIndex("IdolId");

                    b.ToTable("DanhTinh");
                });

            modelBuilder.Entity("QLTT.Data.Idol", b =>
                {
                    b.Property<int>("IdolId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdolId"));

                    b.Property<int>("CongTyId")
                        .HasColumnType("int");

                    b.Property<string>("DangHoatDong")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayRaMat")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenIdol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdolId");

                    b.HasIndex("CongTyId");

                    b.ToTable("Idol");
                });

            modelBuilder.Entity("QLTT.Data.IdolSuKien", b =>
                {
                    b.Property<int>("IdolId")
                        .HasColumnType("int");

                    b.Property<int>("SuKienID")
                        .HasColumnType("int");

                    b.HasKey("IdolId", "SuKienID");

                    b.HasIndex("SuKienID");

                    b.ToTable("IdolSuKien");
                });

            modelBuilder.Entity("QLTT.Data.Kenh", b =>
                {
                    b.Property<int>("KenhId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KenhId"));

                    b.Property<int>("IdolId")
                        .HasColumnType("int");

                    b.Property<string>("NenTang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoLuongNguoiDangKy")
                        .HasColumnType("int");

                    b.Property<string>("TenKenh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TinhTrangKenh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TongLuotXem")
                        .HasColumnType("int");

                    b.Property<string>("UrlKenh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KenhId");

                    b.HasIndex("IdolId");

                    b.ToTable("Kenh");
                });

            modelBuilder.Entity("QLTT.Data.Merch", b =>
                {
                    b.Property<int>("MerchId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MerchId"));

                    b.Property<int>("GiaBan")
                        .HasColumnType("int");

                    b.Property<int>("IdolId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayPhatHanh")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoLuongTonKho")
                        .HasColumnType("int");

                    b.Property<string>("TenMerch")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MerchId");

                    b.HasIndex("IdolId");

                    b.ToTable("Merch");
                });

            modelBuilder.Entity("QLTT.Data.NguoiDung", b =>
                {
                    b.Property<int>("NguoiDungID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NguoiDungID"));

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhanQuyen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenDangNhap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NguoiDungID");

                    b.ToTable("NguoiDung");
                });

            modelBuilder.Entity("QLTT.Data.NhaTaiTro", b =>
                {
                    b.Property<int>("NhaTaiTroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NhaTaiTroId"));

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SuKienId")
                        .HasColumnType("int");

                    b.Property<string>("TenNhaTaiTro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NhaTaiTroId");

                    b.HasIndex("SuKienId");

                    b.ToTable("NhaTaiTro");
                });

            modelBuilder.Entity("QLTT.Data.SuKien", b =>
                {
                    b.Property<int>("SukienId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SukienId"));

                    b.Property<string>("DiaDiem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NgayToChuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("TenSukien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SukienId");

                    b.ToTable("SuKien");
                });

            modelBuilder.Entity("QLTT.Data.DanhTinh", b =>
                {
                    b.HasOne("QLTT.Data.Idol", "Idol")
                        .WithMany()
                        .HasForeignKey("IdolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Idol");
                });

            modelBuilder.Entity("QLTT.Data.Idol", b =>
                {
                    b.HasOne("QLTT.Data.CongTy", "CongTy")
                        .WithMany("Idol")
                        .HasForeignKey("CongTyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CongTy");
                });

            modelBuilder.Entity("QLTT.Data.IdolSuKien", b =>
                {
                    b.HasOne("QLTT.Data.Idol", "Idol")
                        .WithMany("IdolSuKien")
                        .HasForeignKey("IdolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QLTT.Data.SuKien", "SuKien")
                        .WithMany("IdolSukien")
                        .HasForeignKey("SuKienID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Idol");

                    b.Navigation("SuKien");
                });

            modelBuilder.Entity("QLTT.Data.Kenh", b =>
                {
                    b.HasOne("QLTT.Data.Idol", "Idol")
                        .WithMany()
                        .HasForeignKey("IdolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Idol");
                });

            modelBuilder.Entity("QLTT.Data.Merch", b =>
                {
                    b.HasOne("QLTT.Data.Idol", "Idol")
                        .WithMany("Merch")
                        .HasForeignKey("IdolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Idol");
                });

            modelBuilder.Entity("QLTT.Data.NhaTaiTro", b =>
                {
                    b.HasOne("QLTT.Data.SuKien", "SuKien")
                        .WithMany("NhaTaiTro")
                        .HasForeignKey("SuKienId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SuKien");
                });

            modelBuilder.Entity("QLTT.Data.CongTy", b =>
                {
                    b.Navigation("Idol");
                });

            modelBuilder.Entity("QLTT.Data.Idol", b =>
                {
                    b.Navigation("IdolSuKien");

                    b.Navigation("Merch");
                });

            modelBuilder.Entity("QLTT.Data.SuKien", b =>
                {
                    b.Navigation("IdolSukien");

                    b.Navigation("NhaTaiTro");
                });
#pragma warning restore 612, 618
        }
    }
}
